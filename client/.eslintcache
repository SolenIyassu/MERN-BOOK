[{"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/index.js":"1","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/App.js":"2","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/pages/SearchBooks.js":"3","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/Navbar.js":"4","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/pages/SavedBooks.js":"5","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/SignupForm.js":"6","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/LoginForm.js":"7","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/auth.js":"8","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/localStorage.js":"9","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/API.js":"10","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/mutations.js":"11"},{"size":266,"mtime":1667066004928,"results":"12","hashOfConfig":"13"},{"size":1243,"mtime":1666934029345,"results":"14","hashOfConfig":"13"},{"size":5227,"mtime":1667198036823,"results":"15","hashOfConfig":"13"},{"size":2524,"mtime":1666705668213,"results":"16","hashOfConfig":"13"},{"size":3825,"mtime":1667811882760,"results":"17","hashOfConfig":"13"},{"size":3635,"mtime":1667889102424,"results":"18","hashOfConfig":"13"},{"size":2866,"mtime":1667889120206,"results":"19","hashOfConfig":"13"},{"size":1234,"mtime":1666705668215,"results":"20","hashOfConfig":"13"},{"size":793,"mtime":1666705668215,"results":"21","hashOfConfig":"13"},{"size":1392,"mtime":1666705668214,"results":"22","hashOfConfig":"13"},{"size":1134,"mtime":1667061905775,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ycigl7",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/index.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/App.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/pages/SearchBooks.js",["47"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\nimport { saveBook, searchGoogleBooks } from \"../utils/API\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { GET_ME } from \"../utils/queries\";\nimport SavedBooks from \"./SavedBooks\";\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const { data, loading } = useQuery(GET_ME);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  // useEffect(() => {\n  //   return () => saveBookIds(savedBookIds);\n  // });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!data) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n      const { data } = await searchGoogleBooks({\n        variable: { bookId },\n      });\n      if (!data.ok) throw new Error(\"could not find book searched!\");\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || [\"No author to display\"],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook({\n        variable: SavedBooks,\n      \n        const {me} = readQuery({ GET_ME})});\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Search for a book\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : \"Search for a book to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSaveBook(book.bookId)}\n                    >\n                      {savedBookIds?.some(\n                        (savedBookId) => savedBookId === book.bookId\n                      )\n                        ? \"This book has already been saved!\"\n                        : \"Save this Book!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/Navbar.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/pages/SavedBooks.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/SignupForm.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/components/LoginForm.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/auth.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/localStorage.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/API.js",[],"/Users/solen.iyassu/Desktop/bootcamp/Challenges/MERN-BOOK/client/src/utils/mutations.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"48","line":85,"column":9},"Parsing error: Unexpected keyword 'const'.\n\n\u001b[0m \u001b[90m 83 |\u001b[39m         variable\u001b[33m:\u001b[39m \u001b[33mSavedBooks\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 84 |\u001b[39m       \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 85 |\u001b[39m         \u001b[36mconst\u001b[39m {me} \u001b[33m=\u001b[39m readQuery({ \u001b[33mGET_ME\u001b[39m})})\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 86 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 87 |\u001b[39m       \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mok) {\u001b[0m\n\u001b[0m \u001b[90m 88 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"something went wrong!\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"]